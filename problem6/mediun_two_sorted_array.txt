class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) { //function to find of mediun two sorted array
        int m = nums1.length;
        int n = nums2.length;
        
        List<Integer> ls = new ArrayList<>();                       //take arraylist of integers
        double result = 0;
        for(int i =0; i<m; i++){
            ls.add(nums1[i]);                                       //Adding first array to the arrayList
        }
        for(int i=0; i<n; i++){
            ls.add(nums2[i]);                                       //Adding second array to the arrayList
        }
        Collections.sort(ls);                                       //sort the arrayList
        
        int k = (ls.size() / 2);                                    //find the middle element of the list
        if(ls.size() % 2 == 0){                                     //if arrayList size is even then add middle two element and divide them by 2
            result = (ls.get(k)) + (ls.get(k - 1));
            return (result / 2);
        }
        else{
            return ((double)ls.get(k));                             //if arrayList size is odd then return middle element
        }
        
    }
}