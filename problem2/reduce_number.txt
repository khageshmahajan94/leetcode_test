//Number of Steps to Reduce a Number to Zero
/*
Given an integer num, return the number of steps to reduce it to zero.
In one step, if the current number is even, you have to divide it by 2, otherwise, you have to subtract 1 from it.

Example 1:

Input: num = 14
Output: 6
Explanation: 
Step 1) 14 is even; divide by 2 and obtain 7. 
Step 2) 7 is odd; subtract 1 and obtain 6.
Step 3) 6 is even; divide by 2 and obtain 3. 
Step 4) 3 is odd; subtract 1 and obtain 2. 
Step 5) 2 is even; divide by 2 and obtain 1. 
Step 6) 1 is odd; subtract 1 and obtain 0.

*/


class Solution {
    
    public int numberOfSteps(int num) { 
        int countStep = 0;      //take the step counter and assign 0 to it.
        
        while(num != 0){        //check if num is 0 or not
            if(num % 2 == 0){   //check if no. is even or not
                num = num / 2;  //if no. is even then divide the no. by 2
            }
            else{
                num = num - 1;  //if no. is odd then substract 1 from number.
            }
            
            countStep++;        //after each step increase counter by 1
        }
        return countStep;
    }
}